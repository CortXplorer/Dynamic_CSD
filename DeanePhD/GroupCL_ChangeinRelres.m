function GroupCL_ChangeinRelres(homedir)

% This script takes *.mat files out of the figs/Group_Relres folder which is
% generated by the ChangeInRelres.m script. MAKE SURE you run the Change in
% Relres script on the current group.m and _DATA.mat so that things match
% up. This script is dynamic in group size but will need tweaking if a
% group is added.

% Normalization of the layer to the highest peak of any pre laser
% measurement in that measurement can be toggled (yesnorm)

%Input:     D:\MyCode\Dynamic_CSD_Analysis\figs\Group_Relres -> *RelresAll.mat
%Output:    D:\MyCode\Dynamic_CSD_Analysis\figs\Group_Relres -> figures and
%           pdfs of full Relres and layer-wise Relress

%% standard operations
warning('OFF');
dbstop if error

% Change directory to your working folder
if ~exist('homedir','var')
    if exist('E:\Dynamic_CSD','dir') == 7
        cd('E:\Dynamic_CSD');
    elseif exist('C:\Users\kedea\Documents\Dynamic_CSD_Analysis','dir') == 7
        cd('C:\Users\kedea\Documents\Dynamic_CSD_Analysis')
    end
    
    homedir = pwd;
    addpath(genpath(homedir));
end

stimlist = [2,5,10];

%% Group specific calling!

cd (homedir),cd groups
% get active animals lists
run('KIC.m')
KICan = animals;
run('KIT.m')
KITan = animals;
run('KIV.m')
KIVan = animals;
clear animals Cond dB_lev channels
group = {'KIC','KIT','KIV'};
stimtype = {'CL','AM'};

%% Choose Type

cd (homedir),cd figs,cd Group_Relres

for istim = 1:length(stimtype)
    if contains(stimtype{istim},'CL')
        load('CL_RelresAll.mat')
        RelresAll = CL_RelresAll; clear CL_RelresAll
    elseif contains(stimtype{istim},'AM')
        load('AM_RelresAll.mat')
        RelresAll = AM_RelresAll; clear AM_RelresAll
    end
    
 
    %% Split the groups out
    
    % known alphabetical order is also the order the matrix is generate in
    KICgroup = RelresAll(:,1:length(KICan));
    KITgroup = RelresAll(:,length(KICan)+1:length(KICan)+length(KITan));
    KIVgroup = RelresAll(:,length(KICan)+length(KITan)+1:length(KICan)+length(KITan)+length(KIVan));
    
    
    %% stack groups and generate figures
    
    % Note on how groups are currently structure:
    %       KICgroup{stimulus(i.e. 2 Hz),layer(i.e. IV),animal(i.e.KIC02)}...
    %       (condition(i.e. pre-laser),time(ms))
    
    figure('Name',['GA_Relres_' stimtype{istim}], 'Position',[5 45 900 800]); %'Position',[-1000 100 800 1100]
    suborder = [1,4,7,10,13];

    for iGroup = 1:length(group)

        for iStim = 1:length(stimlist)
            subplot(length(stimlist),length(group),suborder(iStim));
            if iStim == 1
                title([stimtype{istim} ' ' group{iGroup}])
            end
            hold on

            if iGroup == 1
                stackedgroup = vertcat(KICgroup{iStim,:});
            elseif iGroup == 2
                stackedgroup = vertcat(KITgroup{iStim,:});
            elseif iGroup == 3
                stackedgroup = vertcat(KIVgroup{iStim,:});
            end

            cond1 = stackedgroup(1:5:end,:);
            cond2 = stackedgroup(2:5:end,:);
            % cond3 = stackedgroup(3:5:end,:);
            % cond4 = stackedgroup(4:5:end,:);
            cond5 = stackedgroup(5:5:end,:);

            % Pre
            shadedErrorBar(1:size(cond1,2),nanmean(cond1),nanstd(cond1),'lineProps', '-b')
            % post 1
            shadedErrorBar(1:size(cond2,2),nanmean(cond2),nanstd(cond2),'lineProps', '-r')
            % post 4
            shadedErrorBar(1:size(cond5,2),nanmean(cond5),nanstd(cond5),'lineProps', '-y')
            xlim([0 1400])
            ylim([-1 1])
        end
        suborder = suborder + 1;

    end
    %legend('Pre','std','Post1','std','Post4','std');
    h = gcf;
    savefig(h,['GA_Relres_' stimtype{istim}],'compact')
    % sometimes pdf makes a funky error
    try
        h.Renderer='Painters';
        saveas(h,['GA_Relres_' stimtype{istim} '.pdf'])
    catch
        fprint('No pdf saved for this file')
    end

    close (h)

end


